name: Build and Release

on:
  push:
    branches:
      - main
      - '1.*'  # This will trigger on branches like 1.20, 1.21, etc.

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build with Gradle
        run: ./gradlew build

      - name: Get version
        id: get_version
        run: |
          echo "VERSION=$(grep 'mod_version' gradle.properties | cut -d'=' -f2 | tr -d '[:space:]')" >> $GITHUB_OUTPUT

      - name: Check if release exists
        id: check_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_id=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ steps.get_version.outputs.VERSION }}" \
            | jq -r '.id')
          if [ "$release_id" = "null" ]; then
            echo "RELEASE_EXISTS=false" >> $GITHUB_OUTPUT
          else
            echo "RELEASE_EXISTS=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        if: steps.check_release.outputs.RELEASE_EXISTS == 'false'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: steps.check_release.outputs.RELEASE_EXISTS == 'false'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/leap-${{ steps.get_version.outputs.VERSION }}.jar
          asset_name: leap-${{ steps.get_version.outputs.VERSION }}.jar
          asset_content_type: application/java-archive